server:
  port: 8082

spring:
  application:
    name: gr-oauth2-swagger-ms2
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8764
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    metadata-map:
      # Indique que ce microservice doit être inclus dans le swagger de 'gr-conf-swagger-aggregator'' (désactiver le sinon sinon).
      swagger.aggregator.enabled: true # ${aggregator.eureka.enabled}

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    try-it-out-enabled: true # Activer le mode "try it out" pour tous les endpoints
    show-actuator: false # activer sinon pour voir les endpoints actuator dans le swagger.
    oauth:
      clientId: client2
      clientSecret: secret2
      usePkceWithAuthorizationCodeGrant: false
    extraScripts:
      - /static/custom-swagger.js

app:
  openapi:
    local-url: http://localhost:${server.port}
    dev-url: http://10.0.0.137:${server.port}
    homol-url: http://10.0.0.500:${server.port}
    prod-url: https://10.0.0.600:${server.port}
## uri de gr-conf-swagger-aggregator
swagger:
  aggregator:
    cors:
      uri: http://localhost:8765 #${aggregator.cors.uri}

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG